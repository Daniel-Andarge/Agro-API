const db = require('../models/index');
const Farmer = db.farmers;

import {User} from "../models/User";
/* import {emailValidator} from "../validators/emailValidator";;
import jwt from "jsonwebtoken"; */


class FarmerController {
    // register method
    static InsertFarmer = async (req,res,next) =>{
        const {firstname, lastname, farmtype, product, city, address} = req.body;
        try {
        const farmer = await Farmer.create({firstname, lastname, farmtype, product, city, address});
        res.status(200).json(farmer);

        } catch (error) {
          console.log(error);
            
        } 
    };


    

   static InsertFarmer = async (req,res,next) => {
   const {fullname,email,password,phoneNumber} = req.body;
    try {
       const user = await User.findOne({email:email});
       if(user) return res.status(500).json(“This user already exist”);
       if(!emailValidator(email)) return res.status(500).json(“enter a valid email”)
        const saveuser = await User.create({
         fullname,
         email,
         password,
         phoneNumber
        });
        await saveuser.save(); 
      res.status(200).json("User created");
    } catch (error) {
        next(error)
    }
}
//login method
static Login = async (req,res,next) => {
try {
if(!req.body.email || !req.body.password) return next(ApiError.NotFound("please input values"))
const user = await User.findOne({email:req.body.email});
if(!user) return res.status(400).json(“This user doesn’t exist”);
const isMatch = await user.matchPassword(req.body.password);
if(!isMatch) return res.status(400).json(“wrong password”)
const token = jwt.sign({id:user._id,email:user.email},”collo”);
const {password, ...otherDetails} = user._doc;
res.status(200).json({user:{...otherDetails,token}});
} catch (error) {
   next(error) 
 };
}

}

export const  {Register,Login,} = UserControllers;